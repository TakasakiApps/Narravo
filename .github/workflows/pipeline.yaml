name: Pipeline

on:
  push:
    branches:
      - dev
    tags-ignore:
      - "**"

jobs:
  # test:
  #   strategy:
  #     matrix:
  #       go-version: [1.20.x]
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Install Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: ${{ matrix.go-version }}

  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: recursive

  #     - name: Test
  #       run: make backend-test

  integration:
    # needs: test
    if: ${{ startsWith(github.event.head_commit.message, 'chore(release)') || contains(github.event.head_commit.message, '[deploy]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub Private Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Previous tag
        id: previousTag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

      - name: Build binary
        run: cd backend && go build -o main .
      - run: ls -al ./backend/

      - name: Build and push Docker image
        if: ${{ startsWith(github.event.head_commit.message, 'chore(release)') }}
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./backend
          tags: |
            aysnine/narravo-backend:${{ steps.previousTag.outputs.tag }}
            aysnine/narravo-backend:latest

      - run: |
          TAG=${{ steps.previousTag.outputs.tag }}
          echo $TAG
          sed -i -e "s/\:latest/\:${TAG}/g" ./deploy/backend.yaml
          cat ./deploy/backend.yaml

      - uses: cschleiden/replace-tokens@v1
        with:
          files: '["deploy/*.yml"]'
        env:
          TENCENT_CLOUD_SECRET_ID: ${{ secrets.TENCENT_CLOUD_SECRET_ID }}
          TENCENT_CLOUD_SECRET_KEY: ${{ secrets.TENCENT_CLOUD_SECRET_KEY }}

      - uses: actions-hub/kubectl@v1.21.2
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f ./deploy/backend.yaml
